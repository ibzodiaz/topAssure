/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assure;

import static assure.ShowAttestClient.jNombreAttestation;
import connexion.connexion;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class ListClients extends javax.swing.JFrame {
    
    Connection connection;
    PreparedStatement pstmt;
    Statement stmt;
    ResultSet rs;
    ShowAttestClient sac = new ShowAttestClient(this);
    AttestParvenues att = new AttestParvenues(this);
    /**
     * Creates new form ListClients
     */
    public ListClients() {
        initComponents();
        Table1();
        ButtonGroup bg = new ButtonGroup();
        bg.add(rdbPool);
        bg.add(rdbHorsPool);
        btnDeleteAttest.setEnabled(false);
        btnModifAttes.setEnabled(false);
        btnConsultAttest.setEnabled(false);
        btnAttestParvenue.setEnabled(false);
    }
    
    public void connect(){
        connection = new connexion().bdd();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClient = new javax.swing.JTable();
        jPanelGenAtt = new javax.swing.JPanel();
        btnEffac = new javax.swing.JButton();
        btnGen = new javax.swing.JButton();
        txtCode = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAgence = new javax.swing.JTextField();
        txtLocalisation = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPremierAttest = new javax.swing.JTextField();
        txtDernierAttest = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btnAddClient = new javax.swing.JButton();
        txtid = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        rdbPool = new javax.swing.JRadioButton();
        rdbHorsPool = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        txtSearchClient = new javax.swing.JTextField();
        btnSearchClient = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnActualize = new javax.swing.JButton();
        btnModifAttes = new javax.swing.JButton();
        btnConsultAttest = new javax.swing.JButton();
        btnDeleteAttest = new javax.swing.JButton();
        btnAttestParvenue = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GESTION DES ATTESTATIONS");
        setBounds(new java.awt.Rectangle(150, 50, 0, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTableClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableClientMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClient);

        jPanelGenAtt.setBackground(new java.awt.Color(255, 255, 255));
        jPanelGenAtt.setBorder(javax.swing.BorderFactory.createTitledBorder("Informations sur l'agence"));

        btnEffac.setBackground(new java.awt.Color(255, 51, 51));
        btnEffac.setForeground(new java.awt.Color(255, 255, 255));
        btnEffac.setText("Effacer");
        btnEffac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEffacActionPerformed(evt);
            }
        });

        btnGen.setBackground(new java.awt.Color(0, 153, 0));
        btnGen.setForeground(new java.awt.Color(255, 255, 255));
        btnGen.setText("Générer");
        btnGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Code");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("*");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Agence");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("*");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Localisation");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 51));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("*");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Date");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("attestations"));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("De");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("à");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("*");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 51));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("*");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtDernierAttest, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPremierAttest, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(txtPremierAttest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(txtDernierAttest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnAddClient.setBackground(new java.awt.Color(0, 153, 0));
        btnAddClient.setForeground(new java.awt.Color(255, 255, 255));
        btnAddClient.setText("Enregistrer");
        btnAddClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClientActionPerformed(evt);
            }
        });

        txtid.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("ID");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Type d'attestations *"));

        rdbPool.setText("POOL");

        rdbHorsPool.setText("HORS POOL");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(rdbPool)
                .addGap(52, 52, 52)
                .addComponent(rdbHorsPool)
                .addContainerGap(107, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbPool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rdbHorsPool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jPanelGenAttLayout = new javax.swing.GroupLayout(jPanelGenAtt);
        jPanelGenAtt.setLayout(jPanelGenAttLayout);
        jPanelGenAttLayout.setHorizontalGroup(
            jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGenAttLayout.createSequentialGroup()
                .addGroup(jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGenAttLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLocalisation, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelGenAttLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddClient, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelGenAttLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAgence, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGenAttLayout.createSequentialGroup()
                        .addComponent(btnGen, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEffac, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanelGenAttLayout.setVerticalGroup(
            jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGenAttLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGenAttLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEffac)
                            .addComponent(btnGen)
                            .addComponent(btnAddClient)))
                    .addGroup(jPanelGenAttLayout.createSequentialGroup()
                        .addGroup(jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocalisation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelGenAttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAgence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelGenAttLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Recherche"));

        txtSearchClient.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSearchClient.setBackground(new java.awt.Color(255, 255, 255));
        btnSearchClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_search.png"))); // NOI18N
        btnSearchClient.setText("Rechercher");
        btnSearchClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchClient)
                    .addComponent(btnSearchClient, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(txtSearchClient, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(btnSearchClient, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));

        btnActualize.setBackground(new java.awt.Color(255, 255, 255));
        btnActualize.setText("Actualiser");
        btnActualize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizeActionPerformed(evt);
            }
        });

        btnModifAttes.setBackground(new java.awt.Color(255, 255, 255));
        btnModifAttes.setText("Modifier");
        btnModifAttes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifAttesActionPerformed(evt);
            }
        });

        btnConsultAttest.setBackground(new java.awt.Color(255, 255, 255));
        btnConsultAttest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye (1).png"))); // NOI18N
        btnConsultAttest.setText("Attestations non Parvenues");
        btnConsultAttest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultAttestActionPerformed(evt);
            }
        });

        btnDeleteAttest.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteAttest.setText("Supprimer");
        btnDeleteAttest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAttestActionPerformed(evt);
            }
        });

        btnAttestParvenue.setBackground(new java.awt.Color(255, 255, 255));
        btnAttestParvenue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye (1).png"))); // NOI18N
        btnAttestParvenue.setText("Attestations Parvenues");
        btnAttestParvenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttestParvenueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnModifAttes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnDeleteAttest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnAttestParvenue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnConsultAttest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
            .addComponent(btnActualize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(btnConsultAttest, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAttestParvenue, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModifAttes, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteAttest, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnActualize, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanelGenAtt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 867, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelGenAtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(219, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnModifAttesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifAttesActionPerformed
        //DateFormat mediumDateFormat = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.MEDIUM);

        connect();
        int i= jTableClient.getSelectedRow();
        DefaultTableModel model= (DefaultTableModel) jTableClient.getModel();
        int res = JOptionPane.showConfirmDialog(null, "Confirmez la modification en cliquant sur ok !","Modification",JOptionPane.WARNING_MESSAGE);
        if(res == JOptionPane.YES_OPTION){
            
            try {
                pstmt = connection.prepareStatement("UPDATE clients SET codes= ?,agence = ?,localisation = ?, date_attest = ? WHERE id = ?");
                pstmt.setString(1,model.getValueAt(i,1).toString());
                pstmt.setString(2,model.getValueAt(i,2).toString());
                pstmt.setString(3,model.getValueAt(i,3).toString());
                pstmt.setString(4,String.format("%1$tY-%1$tm-%1$td",new SimpleDateFormat("dd-MM-yyyy").parse(model.getValueAt(i,6).toString())));
                 
                //pstmt.setString(4,mediumDateFormat.format(new Date()));
                pstmt.setString(5,model.getValueAt(i,0).toString());
                pstmt.executeUpdate();
                connection.close();
                JOptionPane.showMessageDialog(null,"Modifié");
                Table1();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_btnModifAttesActionPerformed

    private void btnDeleteAttestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAttestActionPerformed
        connect();
        int i= jTableClient.getSelectedRow();
        DefaultTableModel model= (DefaultTableModel) jTableClient.getModel();
        int res = JOptionPane.showConfirmDialog(null, "êtes vous sûr ?","Suppression",JOptionPane.WARNING_MESSAGE);
        if(res == JOptionPane.YES_OPTION){
            try {
                pstmt = connection.prepareStatement("DELETE FROM clients WHERE id = ?");
                pstmt.setString(1,model.getValueAt(i,0).toString());
                pstmt.executeUpdate();
                pstmt = connection.prepareStatement("DELETE FROM attestClient WHERE idClient = ?");
                pstmt.setString(1,model.getValueAt(i,0).toString());
                pstmt.executeUpdate();
                pstmt = connection.prepareStatement("DELETE FROM attestationParvenue WHERE idTheClient = ?");
                pstmt.setString(1,model.getValueAt(i,0).toString());
                pstmt.executeUpdate();
                connection.close();
                JOptionPane.showMessageDialog(null,"Supprimé");
                Table1();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
   
    }//GEN-LAST:event_btnDeleteAttestActionPerformed

    private void btnActualizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizeActionPerformed
        Table1();
        btnDeleteAttest.setEnabled(false);
        btnModifAttes.setEnabled(false);
        btnConsultAttest.setEnabled(false);
        btnAttestParvenue.setEnabled(false);
        txtPremierAttest.setText("");
        txtDernierAttest.setText("");
        txtCode.setText("");
        txtAgence.setText("");
        txtLocalisation.setText("");
        jDateChooser.setDate(null);
        txtid.setText("");
    }//GEN-LAST:event_btnActualizeActionPerformed

    private void btnEffacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEffacActionPerformed
        txtPremierAttest.setText("");
        txtDernierAttest.setText("");
        txtCode.setText("");
        txtAgence.setText("");
        txtLocalisation.setText("");
        jDateChooser.setDate(null);
    }//GEN-LAST:event_btnEffacActionPerformed

    private void btnGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenActionPerformed
        connect();
        if(jTableClient.getRowSelectionAllowed()){
            int i= jTableClient.getSelectedRow();
            DefaultTableModel model= (DefaultTableModel) jTableClient.getModel();
            
            
            if(txtPremierAttest.getText().equals("") || txtDernierAttest.getText().equals("")){
                JOptionPane.showMessageDialog(null,"Veuillez entrer les valeurs à générer !");
            }else{
                int debut = Integer.valueOf(txtPremierAttest.getText());
                int fin = Integer.valueOf(txtDernierAttest.getText());
                if(model.getValueAt(i, 5).toString().equals("Pool")){

                    if((txtPremierAttest.getText().length() == 6 && txtDernierAttest.getText().length() == 6) || (txtPremierAttest.getText().length() == 4 && txtDernierAttest.getText().length() == 4)){
                        if(debut >= fin){
                            JOptionPane.showMessageDialog(null,"Inversez les valeurs !");
                        }else{
                            try {
                                pstmt = connection.prepareStatement("UPDATE clients SET nombre_attest = ? , total_attest = ? WHERE id = ?");
                                pstmt.setInt(1,(fin-debut)+1);
                                pstmt.setInt(2,(fin-debut)+1);
                                pstmt.setString(3,model.getValueAt(i,0).toString());
                                pstmt.executeUpdate();

                                for(int j = debut ; j  <= fin ;j++){
                                    pstmt= connection.prepareStatement("INSERT INTO AttestClient(numeros,idClient) VALUES(?,?)");
                                    pstmt.setInt(1,j);
                                    pstmt.setString(2,model.getValueAt(i,0).toString());
                                    pstmt.executeUpdate();
                                }
                                connection.close();
                                JOptionPane.showMessageDialog(null,"Attestations générées !");
                                Table1();
                                txtPremierAttest.setText("");
                                txtDernierAttest.setText("");
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                    }else{
                        JOptionPane.showMessageDialog(null,"L'attestation est de type Pool donc doit être de 4 chiffres ou de 6 chiffres!");
                    }
                }else if(model.getValueAt(i, 5).toString().equals("Hors Pool")){
                    if(txtPremierAttest.getText().length() == 7 && txtDernierAttest.getText().length() == 7){
                        if(debut >= fin){
                            JOptionPane.showMessageDialog(null,"Inversez les valeurs !");
                        }else{
                            try {
                                pstmt = connection.prepareStatement("UPDATE clients SET nombre_attest = ?, total_attest = ? WHERE id = ?");
                                pstmt.setInt(1,(fin-debut)+1);
                                pstmt.setInt(2,(fin-debut)+1);
                                pstmt.setString(3,model.getValueAt(i,0).toString());
                                pstmt.executeUpdate();

                                for(int j = debut ; j  <= fin ;j++){
                                    pstmt= connection.prepareStatement("INSERT INTO AttestClient(numeros,idClient) VALUES(?,?)");
                                    pstmt.setInt(1,j);
                                    pstmt.setString(2,model.getValueAt(i,0).toString());
                                    pstmt.executeUpdate();
                                }
                                connection.close();
                                JOptionPane.showMessageDialog(null,"Attestations générées !");
                                Table1();
                                txtPremierAttest.setText("");
                                txtDernierAttest.setText("");
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                    }else{
                         JOptionPane.showMessageDialog(null,"L'attestation est de type Hors Pool donc doit être de 7 chiffres !");
                    }
                }
            }
            
        }
    }//GEN-LAST:event_btnGenActionPerformed

    private void btnConsultAttestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultAttestActionPerformed
        sac.setVisible(true);
        connect();
        int i= jTableClient.getSelectedRow();
        DefaultTableModel model0= (DefaultTableModel) jTableClient.getModel();
        
        sac.jCode.setText(model0.getValueAt(i,1).toString());
        sac.jAgence.setText(model0.getValueAt(i,2).toString());
        sac.jLocalisation.setText(model0.getValueAt(i,3).toString());
        sac.jNombreAttestation.setText(model0.getValueAt(i,4).toString());
        sac.jTypeAttestation.setText(model0.getValueAt(i,5).toString());
        sac.jDate.setText(model0.getValueAt(i,6).toString());
        sac.jNombreTotalAttestation.setText(model0.getValueAt(i,7).toString());
        
        String[] production ={"ATTESTATIONS NON PARVENUES"};

        String[] afficher = new String[1];
        /*jTableInfCli*/
        DefaultTableModel model = new DefaultTableModel(null,production);
        try {

            connect();

            Statement st = connection.createStatement();

            rs = st.executeQuery("SELECT * FROM AttestClient WHERE "+model0.getValueAt(i,0).toString()+" = idClient");

           

            while(rs.next()){
                
                afficher[0] = rs.getString("numeros");                

                model.addRow(afficher);

            }

            sac.jTableInfCli.setModel(model);

            connection.close();

        } catch (Exception e) {

            e.printStackTrace();

        }finally{

            if(connection != null)

                try {

                        connection.close();

                } catch (SQLException ex) {

                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);

                }

        }

    }//GEN-LAST:event_btnConsultAttestActionPerformed

    private void btnSearchClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchClientActionPerformed
        String searched = txtSearchClient.getText();
        
        if(searched.equals("")){
           
           JOptionPane.showMessageDialog(null,"Veuillez d'abord remplir le champ de recherche !");
           
        }else{

            String[] production ={"ID","CODES","AGENCE","LOCALISATION","NOMBRE ATTESTATION","TYPE ATTESTATION","DATE ENREGISTREMENT","TOTAL ATTESTATIONS"};

            String[] afficher = new String[9];

            DefaultTableModel model = new DefaultTableModel(null,production);

            jTableClient.removeAll();

            try {

                connect();



                pstmt = connection.prepareStatement("SELECT * FROM clients WHERE codes LIKE ? OR agence LIKE ? OR date_attest LIKE ? ORDER BY date_attest DESC");

                pstmt.setString(1,"%"+searched+"%");
                pstmt.setString(2,"%"+searched+"%");
                pstmt.setString(3,"%"+String.format("%1$tY-%1$tm-%1$td",new SimpleDateFormat("dd-MM-yyyy").parse(searched))+"%");
                rs = pstmt.executeQuery();

                while(rs.next()){
                     
                    afficher[0] = rs.getString("id");
                    
                    afficher[1] = rs.getString("codes");

                    afficher[2] = rs.getString("agence");

                    afficher[3] = rs.getString("localisation");

                    afficher[4] = rs.getString("nombre_attest");

                    afficher[5] = rs.getString("type_attest");

                    afficher[6] = String.format("%1$td-%1$tm-%1$tY ",new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString("date_attest")));
                    
                    afficher[7] = rs.getString("total_attest");

                    model.addRow(afficher);

                }



                jTableClient.setModel(model);

                connection.close();

            } catch (Exception e) {

                e.printStackTrace();

            }
       }
    }//GEN-LAST:event_btnSearchClientActionPerformed

    private void btnAttestParvenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttestParvenueActionPerformed
        att.setVisible(true);
        connect();
        int i= jTableClient.getSelectedRow();
        DefaultTableModel model0= (DefaultTableModel) jTableClient.getModel();
        
        int compteur = 0;

        String[] production ={"ATTESTATIONS PARVENUES","DATE"};

        String[] afficher = new String[2];
      
        DefaultTableModel model = new DefaultTableModel(null,production);
        try {

            connect();

            Statement st = connection.createStatement();

            rs = st.executeQuery("SELECT * FROM attestationParvenue WHERE "+model0.getValueAt(i,0).toString()+" = idTheClient");

            

            while(rs.next()){
                
                afficher[0] = rs.getString("numero");                
                afficher[1] = rs.getString("coming_date");
                model.addRow(afficher);
                
                compteur++;

            }
            
            att.jCodeP.setText(model0.getValueAt(i,1).toString());
            att.jAgenceP.setText(model0.getValueAt(i,2).toString());
            att.jLocalisationP.setText(model0.getValueAt(i,3).toString());
            att.jNombreAttestationP.setText(String.valueOf(compteur));
            att.jTypeAttestationP.setText(model0.getValueAt(i,5).toString());

            att.jTableParvenus.setModel(model);

            connection.close();
            compteur = 0;
        } catch (Exception e) {

            e.printStackTrace();

        }finally{

            if(connection != null)

                try {

                        connection.close();

                } catch (SQLException ex) {

                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);

                }

        }
    }//GEN-LAST:event_btnAttestParvenueActionPerformed

    private void btnAddClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClientActionPerformed
        if(txtCode.getText().equals("") || txtAgence.getText().equals("") || !(rdbPool.isSelected() || rdbHorsPool.isSelected()) || jDateChooser.getDate() == null){
               JOptionPane.showMessageDialog(null,"Veuillez renseigner au moins le code, l'agence, la date et le type d'attestation !");
        }else{

            try {
                connect();
                pstmt= connection.prepareStatement("INSERT INTO clients(codes,agence,localisation,nombre_attest,type_attest,date_attest,total_attest) VALUES(?,?,?,?,?,?,?);");
                pstmt.setString(1,txtCode.getText());
                pstmt.setString(2,txtAgence.getText());
                pstmt.setString(3,txtLocalisation.getText());
                pstmt.setString(4,"");
                if(rdbPool.isSelected()){
                    pstmt.setString(5,"Pool");
                }
                if(rdbHorsPool.isSelected()){
                    pstmt.setString(5,"Hors Pool");
                }
                Date dateFromDateChooser = jDateChooser.getDate();
                String dateString = String.format("%1$tY-%1$tm-%1$td", dateFromDateChooser);
                pstmt.setString(6,dateString);
                pstmt.setString(7,"");
                pstmt.executeUpdate();
                connection.close();
                JOptionPane.showMessageDialog(null,"Ajouté!");
                txtCode.setText("");
                txtAgence.setText("");
                txtLocalisation.setText("");
           
                Table1();
            } catch (SQLException ex) {
                Logger.getLogger(ListClients.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddClientActionPerformed

    private void jTableClientMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientMouseReleased
        int i= jTableClient.getSelectedRow();
        DefaultTableModel model= (DefaultTableModel) jTableClient.getModel();
        txtid.setText(model.getValueAt(i,0).toString());
        txtCode.setText(model.getValueAt(i,1).toString());
        txtAgence.setText(model.getValueAt(i,2).toString());
        txtLocalisation.setText(model.getValueAt(i,3).toString());
        Date date;
        try {
            date = new SimpleDateFormat("dd-MM-yyyy").parse(model.getValueAt(i,6).toString());
            jDateChooser.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(ListClients.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        btnDeleteAttest.setEnabled(true);
        btnModifAttes.setEnabled(true);
        btnConsultAttest.setEnabled(true);
        btnAttestParvenue.setEnabled(true);
        
    }//GEN-LAST:event_jTableClientMouseReleased
    
    public void Table1(){
        String[] production ={"ID","CODES","AGENCE","LOCALISATION","NOMBRE ATTESTATION","TYPE ATTESTATION","DATE ENREGISTREMENT","TOTAL ATTESTATIONS"};

        String[] afficher = new String[9];

        DefaultTableModel model = new DefaultTableModel(null,production);

        try {

            connect();

            Statement st = connection.createStatement();

            rs = st.executeQuery("SELECT * FROM clients ORDER BY date_attest DESC");
            
          
            
            while(rs.next()){
                
                afficher[0] = rs.getString("id");

                afficher[1] = rs.getString("codes");

                afficher[2] = rs.getString("agence");

                afficher[3] = rs.getString("localisation");

                afficher[4] = rs.getString("nombre_attest");

                afficher[5] = rs.getString("type_attest");

                afficher[6] = String.format("%1$td-%1$tm-%1$tY ",new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString("date_attest")));
                
                afficher[7] = rs.getString("total_attest");
                
               /* pstmt= connection.prepareStatement("INSERT INTO clients2(id,codes,agence,localisation,nombre_attest,type_attest,date_attest,total_attest) VALUES(?,?,?,?,?,?,?,?)");
                pstmt.setString(1,afficher[0] );
                pstmt.setString(2,afficher[1] );
                pstmt.setString(3,afficher[2] );
                pstmt.setString(4,afficher[3] );
                pstmt.setString(5,afficher[4] );
                pstmt.setString(6,afficher[5] );
                pstmt.setString(7,afficher[6] );
                pstmt.setString(8,afficher[7] );
             
                pstmt.executeUpdate();*/

                model.addRow(afficher);

            }

            jTableClient.setModel(model);

            connection.close();

        } catch (Exception e) {

            e.printStackTrace();

        }finally{

            if(connection != null)

                try {

                        connection.close();

                } catch (SQLException ex) {

                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);

                }

        }


    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListClients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListClients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListClients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListClients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListClients().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualize;
    private javax.swing.JButton btnAddClient;
    private javax.swing.JButton btnAttestParvenue;
    private javax.swing.JButton btnConsultAttest;
    private javax.swing.JButton btnDeleteAttest;
    private javax.swing.JButton btnEffac;
    private javax.swing.JButton btnGen;
    private javax.swing.JButton btnModifAttes;
    private javax.swing.JButton btnSearchClient;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelGenAtt;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTableClient;
    private javax.swing.JRadioButton rdbHorsPool;
    private javax.swing.JRadioButton rdbPool;
    private javax.swing.JTextField txtAgence;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtDernierAttest;
    private javax.swing.JTextField txtLocalisation;
    private javax.swing.JTextField txtPremierAttest;
    private javax.swing.JTextField txtSearchClient;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
}
